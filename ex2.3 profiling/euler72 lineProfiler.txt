zhao@DESKTOP-8PHCC8L:~$ kernprof -l -v euler72.py
30397485.0
Wrote profile results to euler72.py.lprof
Timer unit: 1e-06 s

Total time: 0.015146 s
File: euler72.py
Function: gen_primes at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                           @profile
     5                                           def gen_primes(n):
     6         1          8.0      8.0      0.1      l = range(2,n)
     7         1          1.0      1.0      0.0      primes = []
     8       999       1032.0      1.0      6.8      for j in range(0,len(l)):
     9       998       1002.0      1.0      6.6          p = True
    10      2968       3005.0      1.0     19.8          for d in primes:
    11      2967       3679.0      1.2     24.3              if(d > sqrt(l[j])):
    12       167        174.0      1.0      1.1                  break
    13      2800       3329.0      1.2     22.0              if(l[j] % d == 0):
    14       830        852.0      1.0      5.6                  p = False
    15       830        876.0      1.1      5.8                  break;
    16       998        971.0      1.0      6.4          if(p):
    17       168        216.0      1.3      1.4              primes.append(l[j])
    18
    19         1          1.0      1.0      0.0      return primes

Total time: 0.421595 s
File: euler72.py
Function: factorize at line 21

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    21                                           @profile
    22                                           def factorize(n,primes):
    23      9999       9471.0      0.9      2.2      factors = []
    24      9999       9405.0      0.9      2.2      init_n = n
    25     96347      91750.0      1.0     21.8      for p in primes:
    26    118736     124451.0      1.0     29.5          while(n%p == 0):
    27     22389      22140.0      1.0      5.3              n = n/p
    28     22389      23480.0      1.0      5.6              factors.append(p)
    29     96347     101681.0      1.1     24.1          if(p > sqrt(n)):
    30      9999       9608.0      1.0      2.3              break
    31      9999      10124.0      1.0      2.4      if(n > 1):
    32      9596       9974.0      1.0      2.4          factors.append(n)
    33      9999       9511.0      1.0      2.3      return factors

Total time: 0.928471 s
File: euler72.py
Function: fast_phi at line 50

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    50                                           @profile
    51                                           def fast_phi(n,primes):
    52      9999     824983.0     82.5     88.9      factors = factorize(n,primes)
    53      9999      10483.0      1.0      1.1      phi = factors[0]-1
    54     31985      34439.0      1.1      3.7      for i in range(1,len(factors)):
    55     21986      24253.0      1.1      2.6          if(factors[i] == factors[i-1]):
    56      7685       9410.0      1.2      1.0              phi *= (factors[i]-1)*(factors[i])/(factors[i]-1)
    57                                                   else:
    58     14301      15385.0      1.1      1.7              phi *= (factors[i]-1)
    59      9999       9518.0      1.0      1.0      return phi

